sntRover.controller("rvApplyRoomChargeCtrl",["$scope","$rootScope","$state","$stateParams","RVRoomAssignmentSrv","RVUpgradesSrv","ngDialog","RVReservationCardSrv","$timeout","rvPermissionSrv",function(e,o,r,t,a,s,n,i,c,l){BaseCtrl.call(this,e),e.noChargeDisabled=!1,e.chargeDisabled=!0,e.roomCharge="";var u=!1,m=!1;e.enableDisableButtons=function(){return!isNaN(e.roomCharge)&&e.roomCharge.length>0},e.clickChargeButton=function(){m=!1;var o={params:{reservation_id:e.reservationData.reservation_card.reservation_id,room_no:e.assignedRoom?e.assignedRoom.room_number:"",upsell_amount:e.roomCharge,forcefully_assign_room:!(!e.overbooking.isOpted||!l.getPermissionValue("OVERBOOK_ROOM_TYPE"))||u,is_preassigned:e.assignedRoom.is_preassigned,change_room_type_alone:!e.assignedRoom,room_type:e.assignedRoom?"":e.getCurrentRoomType().type},successCallBack:e.successCallbackUpgrade,failureCallBack:e.failureCallbackUpgrade};e.callAPI(s.selectUpgrade,o)};e.selectUpgrade=function(){e.closeDialog(),c(function(){m?e.clickedNoChargeButton():e.clickChargeButton()},100)},e.failureCallbackUpgrade=function(o){if(e.$emit("hideLoader"),o.hasOwnProperty("httpStatus"))switch(o.httpStatus){case 470:var r={errorMessage:o.errorMessage[0],upsell_amount:e.roomCharge};u=!0,e.$emit("closeDialogWithError",r)}else e.displayRoomAssignementError(o.toString());e.$emit("hideLoader")},e.successCallbackUpgrade=function(o){var r={},t=e.assignedRoom,a=e.selectedRoomType,s=e.reservationData.reservation_card;_.extend(r,{room_id:t.room_id,room_number:t.room_number,room_status:"READY",fo_status:"VACANT",room_ready_status:"INSPECTED",is_upsell_available:o.is_upsell_available?"true":"false"}),"undefined"!=typeof e.selectedRoomType&&_.extend(r,{room_type_description:a.description,room_type_code:a.type}),_.extend(e.reservationData.reservation_card,r),i.updateResrvationForConfirmationNumber(s.confirmation_num,e.reservationData),e.goToNextView(!0)},e.canMoveRoomWithoutCharge=function(){return l.getPermissionValue("MOVE_ROOM_WITHOUT_CHARGE")},e.clickedNoChargeButton=function(){m=!0;var o={params:{reservation_id:e.reservationData.reservation_card.reservation_id,room_no:e.assignedRoom?e.assignedRoom.room_number:"",forcefully_assign_room:!(!e.overbooking.isOpted||!l.getPermissionValue("OVERBOOK_ROOM_TYPE"))||u,is_preassigned:e.assignedRoom.is_preassigned,upsell_amount:"0",change_room_type_alone:!e.assignedRoom,room_type:e.assignedRoom?"":e.getCurrentRoomType().type},successCallBack:e.successCallbackUpgrade,failureCallBack:e.failureCallbackUpgrade,loader:"NONE"};e.$emit("showLoader"),e.callAPI(s.selectUpgrade,o)}}]),sntRover.controller("rvBorrowRoomTypeCtrl",["$scope","RVUpgradesSrv","ngDialog","RVRoomAssignmentSrv",function(e,o,r,t){e.selectedUpgrade={},_.extend(e.selectedUpgrade,{room_id:e.assignedRoom.room_id,room_no:e.assignedRoom.room_number,room_type_name:e.assignedRoom.room_type_name,room_type_code:e.assignedRoom.room_type_code});var a=function(o){e.closeDialog(),e.$emit("upgradeSelected",e.selectedUpgrade)},s=function(o){e.$emit("hideLoader"),e.$parent.errorMessage=o,e.closeDialog()};e.clickedBorrowButton=function(){var r=e.reservationData.reservation_card,n=r.reservation_status,i=o.selectUpgrade,c={};c.forcefully_assign_room=!0,c.reservation_id=r.reservation_id,c.upsell_amount=e.passingParams.upsell_amount,c.room_no=e.assignedRoom.room_number,c.is_preassigned=e.assignedRoom.is_preassigned,c.is_overbooking=e.is_overbooking,c.room_type=e.getCurrentRoomType().type,"CHECKEDIN"===n&&e.roomTransfer&&(c.without_rate_change=e.roomTransfer.withoutRateChange,c.new_rate_amount=e.roomTransfer.newRoomRateChange,c.room_number=e.assignedRoom.room_number,i=t.assignRoom);var l={params:c,successCallBack:a,failureCallBack:s};e.callAPI(i,l)}}]),sntRover.controller("rvMaximumOccupancyDialogController",["$scope","$rootScope","$filter","ngDialog",function(e,o,r,t){BaseCtrl.call(this,e),e.closeDialog=function(){t.close()},e.dimissLoaderAndDialog=function(){e.$emit("hideLoader"),e.closeDialog()},e.proceed=function(){e.closeDialog(),e.occupancyDialogSuccess()},e.validate=function(){}}]),sntRover.controller("RVOverBookRoomDialogController",["$scope","$rootScope","ngDialog",function(e,o,r){BaseCtrl.call(this,e),e.closeDialog=function(){r.close()},e.clickedYesInOverBook=function(){e.overbooking.isOpted=!0,e.closeDialog(),e.showMaximumOccupancyDialog(e.currentRoomObject)}}]),sntRover.controller("rvRoomAlreadySelectedCtrl",["$scope","$state",function(e,o){BaseCtrl.call(this,e),e.clickedCloseButton=function(){e.closeDialog(),e.goToNextView()}}]),sntRover.controller("RVroomAssignmentController",["$scope","$rootScope","$state","$stateParams","RVRoomAssignmentSrv","$filter","RVReservationCardSrv","roomsList","roomPreferences","roomUpgrades","$timeout","ngDialog","RVSearchSrv","rvPermissionSrv","RVNightlyDiarySrv","RVUpgradesSrv",function(e,o,r,t,a,s,n,i,c,l,u,m,d,p,g,v){o.setPrevState={title:s("translate")("STAY_CARD"),callback:"backToStayCard",scope:e};var f=this,h={includeNotReady:{id:-100,name:s("translate")("INCLUDE_NOTREADY_LABEL"),selected:!1,param:"include_not_ready"},includeDueOut:{id:-101,name:s("translate")("INCLUDE_DUEOUT_LABEL"),selected:!1,param:"include_dueout"},includePreassigned:{id:-102,name:s("translate")("INCLUDE_PREASSIGNED_LABEL"),selected:!1,param:"include_preassigned"},includeClean:{id:-103,name:s("translate")("INCLUDE_CLEAN_LABEL"),selected:!1,param:"include_clean"}},y=25,R="roomlist";BaseCtrl.call(this,e);var S=!1,D="",T=!1,C="",A=null;e.errorMessage="";var b=s("translate")("ROOM_ASSIGNMENT_TITLE");e.setTitle(b),setTimeout(function(){e.refreshScroller(R),e.refreshScroller("filterlist")},3e3),u(function(){0===l.length?"":e.$broadcast("roomUpgradesLoaded",l),e.$broadcast("roomFeaturesLoaded",e.roomFeatures)}),e.roomAssgnment={},e.roomAssgnment.inProgress=!1,e.roomTransfer={},e.isRoomLockedForThisReservation=t.cannot_move_room,e.overbooking={isOpted:!1},e.getRooms=function(){e.searchText="";var o=_.find(e.roomTypes,{type:e.roomType});e.currentRoomTypeId=o.id,e.currentRoomTypeName=o.description,e.currentRoomTypeCode=o.type,e.isSearchActive=!1,f.getRoomsByRoomType(1)},e.getCurrentRoomType=function(){for(var o=0;o<e.roomTypes.length;o++)if(e.roomTypes[o].type===e.roomType)return e.roomTypes[o]},e.searchRoom=_.debounce(function(){e.searchText=e.searchText.toUpperCase(),""!==e.searchText?(o.isSingleDigitSearch&&e.searchText.length>=1||!o.isSingleDigitSearch&&e.searchText.length>=2)&&(e.isSearchActive=!0,f.resetFilters(),f.doSearch(1)):(e.filteredRooms=[],e.isSearchActive=!1,f.getRoomsByRoomType(1))},1e3),e.moveInHouseRooms=function(){e.selectedRoomType=e.getCurrentRoomType();var o=function(o){e.roomTransfer.newRoomRate=o.data.new_rate_amount,e.roomTransfer.oldRoomRate=o.data.old_rate_amount,e.$emit("hideLoader"),e.roomTransfer.newRoomRate!==e.roomTransfer.oldRoomRate?(e.roomTransfer.newRoomType=e.selectedRoomType.description,e.roomTransfer.isNewRoomType=!0):(e.roomTransfer.newRoomType=e.selectedRoomType.description,e.roomTransfer.isNewRoomType=!1),m.open({template:"/assets/partials/roomAssignment/rvRoomTransferConfirmation.html",controller:"rvRoomTransferConfirmationCtrl",scope:e})},r=function(o){e.$emit("hideLoader"),e.errorMessage=o},t={};t.reservation_id=e.reservationData.reservation_card.reservation_id,t.room_type_id=e.selectedRoomType.id,t.room_number=e.roomTransfer.newRoomNumber,e.invokeApi(a.moveInHouseRooms,t,o,r)},e.checkRoomTypeAvailability=function(o){if("true"===e.isRoomLockedForThisReservation||o.donot_move_room)m.open({template:"/assets/partials/roomAssignment/rvRoomLocked.html",className:"ngdialog-theme-default",scope:e});else{var r=_.findWhere(e.roomTypes,{id:o.room_type_id}).availability,t=e.getCurrentRoomType(),a=r>0,s=p.getPermissionValue("OVERBOOK_ROOM_TYPE");e.currentRoomObject=o,t.type===C&&o.room_type_code===C?e.showMaximumOccupancyDialog(o):a?e.showMaximumOccupancyDialog(o):o.is_suite_room||!s?m.open({template:"/assets/partials/roomAssignment/rvRoomTypeNotAvailable.html",className:"ngdialog-theme-default",scope:e}):m.open({template:"/assets/partials/roomAssignment/rvOverBookRoom.html",controller:"RVOverBookRoomDialogController",className:"ngdialog-theme-default",scope:e})}},e.showMaximumOccupancyDialog=function(r){if(r){var t=e.reservationData.reservation_card.reservation_status,a=!1;if(null!=r.room_max_occupancy&&null!=e.reservation_occupancy?r.room_max_occupancy<e.reservation_occupancy&&(a=!0,e.max_occupancy=r.room_max_occupancy):null!=r.room_type_max_occupancy&&null!=e.reservation_occupancy&&r.room_type_max_occupancy<e.reservation_occupancy&&(a=!0,e.max_occupancy=r.room_type_max_occupancy),e.assignedRoom=r,e.is_overbooking=!0,"true"===e.assignedRoom.is_upgrade_room){var s="";angular.forEach(l.upsell_data,function(o,r){e.assignedRoom.room_number===o.upgrade_room_number&&(s=r)}),e.$broadcast("UPGRADE_ROOM_SELECTED_FROM_ROOM_ASSIGNMENT",s)}else e.roomTransfer.newRoomNumber=r.room_number,a?(A=r,e.oldRoomType=C,m.open({template:"/assets/partials/roomAssignment/rvMaximumOccupancyDialog.html",controller:"rvMaximumOccupancyDialogController",className:"ngdialog-theme-default",scope:e})):"CHECKEDIN"===t?e.moveInHouseRooms():o.isUpsellTurnedOn&&C!==r.room_type_code?(e.oldRoomType=C,e.openApplyChargeDialog()):(e.roomTransfer.withoutRateChange=!0,e.assignRoom())}else $()},e.$on("closeDialogWithError",function(e,o){m.close(),N(o)});var N=function(o){e.passingParams={errorMessage:"object"==typeof o.errorMessage?o.errorMessage[0]:o.errorMessage,upsell_amount:o.upsell_amount},m.open({template:"/assets/partials/roomAssignment/rvGroupRoomTypeNotConfigured.html",controller:"rvBorrowRoomTypeCtrl",scope:e})};e.openApplyChargeDialog=function(){m.open({template:"/assets/partials/roomAssignment/rvApplyRoomCharge.html",controller:"rvApplyRoomChargeCtrl",className:"ngdialog-theme-default",scope:e})};var O=function(){var o={params:{reservation_id:e.reservationData.reservation_card.reservation_id,room_no:e.assignedRoom?e.assignedRoom.room_number:"",upsell_amount:"0",forcefully_assign_room:!(!e.overbooking.isOpted||!p.getPermissionValue("OVERBOOK_ROOM_TYPE"))||S,is_preassigned:e.assignedRoom.is_preassigned,change_room_type_alone:!e.assignedRoom,room_type:e.assignedRoom?"":e.getCurrentRoomType().type},successCallBack:k};e.callAPI(v.selectUpgrade,o)},k=function(o){var r={},t=e.assignedRoom,a=e.selectedRoomType,s=e.reservationData.reservation_card;_.extend(r,{room_id:t.room_id,room_number:t.room_number,room_status:"READY",fo_status:"VACANT",room_ready_status:"INSPECTED",is_upsell_available:o.is_upsell_available?"true":"false"}),"undefined"!=typeof e.selectedRoomType&&_.extend(r,{room_type_description:a.description,room_type_code:a.type}),_.extend(e.reservationData.reservation_card,r),n.updateResrvationForConfirmationNumber(s.confirmation_num,e.reservationData),e.goToNextView(!0)};e.occupancyDialogSuccess=function(){var r=e.reservationData.reservation_card.reservation_status;"CHECKEDIN"===r?e.moveInHouseRooms():(o.isUpsellTurnedOn&&(A&&C!==A.room_type_code||!e.assignedRoom)?(e.oldRoomType=C,e.openApplyChargeDialog()):(e.roomTransfer.withoutRateChange=!0,e.assignRoom()),A=null)};var I=function(){var o={room:""};d.updateRoomDetails(e.reservationData.reservation_card.confirmation_num,o)};e.unassignRoom=function(){if("true"===e.isRoomLockedForThisReservation)m.open({template:"/assets/partials/roomAssignment/rvRoomLocked.html",className:"ngdialog-theme-default",scope:e});else{var o={reservationId:parseInt(t.reservation_id,10)},r=function(o){e.$emit("hideLoader"),e.reservationData.reservation_card.room_id="",e.reservationData.reservation_card.room_number="",e.reservationData.reservation_card.room_status="",e.reservationData.reservation_card.fo_status="",e.reservationData.reservation_card.room_ready_status="",n.updateResrvationForConfirmationNumber(e.reservationData.reservation_card.confirmation_num,e.reservationData),I();var r=g.getCache();r.currentSelectedReservationId="",r.currentSelectedReservation="",g.updateCache(r),e.backToStayCard()},s=function(o){e.$emit("hideLoader"),e.errorMessage=o};e.invokeApi(a.UnAssignRoom,o,r,s)}};var L=function(){m.open({template:"/assets/partials/roomAssignment/rvRoomHasAutoAssigned.html",controller:"rvRoomAlreadySelectedCtrl",className:"ngdialog-theme-default",scope:e})};e.roomAssignedByOpera="";var F=function(o){m.open({template:"/assets/partials/roomAssignment/rvRoomAssignmentShowErrorMessage.html",controller:"rvRoomAlreadySelectedCtrl",className:"ngdialog-theme-default",scope:e,data:JSON.stringify(o)})},E=function(o){var t={},a=e.assignedRoom,s=e.selectedRoomType,i=e.reservationData.reservation_card;D=o.is_online_move_allowed,T="undefined"!=typeof o.is_online_move_allowed,_.extend(t,{room_id:a.room_id,room_status:a.room_status,fo_status:a.fo_status,room_ready_status:a.room_ready_status,is_upsell_available:o.is_upsell_available?"true":"false"}),"undefined"!=typeof e.selectedRoomType&&_.extend(t,{room_type_description:s.description,room_type_code:s.type}),o.is_room_auto_assigned&&!e.isStandAlone?(e.roomAssignedByOpera=o.room,t.room_number=o.room,L()):("checkinButton"===e.clickedButton?r.go("rover.reservation.staycard.billcard",{reservationId:i.reservation_id,clickedButton:"checkinButton"}):e.backToStayCard(),t.room_number=a.room_number),_.extend(e.reservationData.reservation_card,t),n.updateResrvationForConfirmationNumber(i.confirmation_num,e.reservationData),e.roomAssgnment.inProgress=!1},P=function(r){if(e.roomAssgnment.inProgress=!1,r.hasOwnProperty("httpStatus"))switch(r.httpStatus){case 470:S=!0,u(N.bind(null,r),500)}else if(o.isStandAlone){var t={error:r.toString()};u(F.bind(null,t),500)}else u(L,400)};e.assignRoom=function(){e.roomAssgnment.inProgress=!0;var o={};o.reservation_id=parseInt(t.reservation_id,10),o.room_number=e.assignedRoom.room_number,o.without_rate_change=e.roomTransfer.withoutRateChange,o.new_rate_amount=e.roomTransfer.newRoomRateChange,o.is_preassigned=e.assignedRoom.is_preassigned,o.forcefully_assign_room=S,S=!1;var r={params:o,successCallBack:E,failureCallBack:P};e.callAPI(a.assignRoom,r)},e.goToStayCardFromAddToQueue=!1,o.reservationRoomWatch||(o.reservationRoomWatch=1,o.$on("putGuestInQueue",function(){e.goToStayCardFromAddToQueue=!0,o.goToStayCardFromAddToQueue=!0})),e.goToNextView=function(o){u(function(){o&&m.close()},500),"checkinButton"===e.clickedButton?(e.$emit("hideLoader"),r.go("rover.reservation.staycard.billcard",{reservationId:e.reservationData.reservation_card.reservation_id,clickedButton:"checkinButton"})):e.backToStayCard()};var B={preventDefault:!1};e.setScroller(R,B),e.setScroller("filterlist",B),e.$on("roomFeaturesUpdated",function(o,r){e.isSearchActive=!1,e.searchText="",e.roomFeatures=r,e.setSelectedFiltersList(),f.getRoomsByRoomType(1)}),e.$on("upgradeSelected",function(o,r){e.upgradeRoomClicked(r)}),e.upgradeRoomClicked=function(o){e.reservationData.reservation_card.room_id=o.room_id,e.reservationData.reservation_card.room_number=o.room_no,e.reservationData.reservation_card.room_type_description=o.room_type_name,e.reservationData.reservation_card.room_type_code=o.room_type_code,e.reservationData.reservation_card.room_status="READY",e.reservationData.reservation_card.fo_status="VACANT",e.reservationData.reservation_card.room_ready_status="INSPECTED",e.reservationData.reservation_card.is_upsell_available=o.is_upsell_available?"true":"false",n.updateResrvationForConfirmationNumber(e.reservationData.reservation_card.confirmation_num,e.reservationData),"checkinButton"===e.clickedButton?r.go("rover.reservation.staycard.billcard",{reservationId:e.reservationData.reservation_card.reservation_id,clickedButton:"checkinButton"}):e.backToStayCard()},e.backToStayCard=function(){r.go("rover.reservation.staycard.reservationcard.reservationdetails",{id:e.reservationData.reservation_card.reservation_id,confirmationId:e.reservationData.reservation_card.confirmation_num,isrefresh:!0,isOnlineRoomMove:D,isKeySystemAvailable:T})},e.toggleFiltersView=function(){e.isFiltersVisible=!e.isFiltersVisible,setTimeout(function(){e.refreshScroller("filterlist")},1e3)},e.getRoomStatusClass=function(){var o=e.reservationData.reservation_card.reservation_status,r=e.reservationData.reservation_card.room_ready_status,t=e.reservationData.reservation_card.fo_status,a=e.reservationData.reservation_card.checkin_inspected_only;return getMappedRoomStatusColor(o,r,t,a)},e.getNotReadyRoomTag=function(e){return e.is_in_future?"":"PICKUP"===e.room_ready_status||"CLEAN"===e.room_ready_status?e.room_ready_status:e.fo_status},e.getRoomStatusClassForRoom=function(o){if("true"===o.is_oos)return"room-grey";var r="";if("RESERVED"===e.reservationData.reservation_card.reservation_status)return r;var t=o.room_ready_status,a=o.fo_status,s=o.checkin_inspected_only;if(""!==t)if("VACANT"===a)switch(t){case"INSPECTED":r=" room-green";break;case"CLEAN":if(s){r=" room-orange";break}r=" room-green";break;case"PICKUP":r=" room-orange";break;case"DIRTY":r=" room-red"}else r="room-red";return r},e.setNightsText=function(){return 1===e.reservationData.reservation_card.total_nights?s("translate")("NIGHT_LABEL"):s("translate")("NIGHTS_LABEL")},e.addPredefinedFilters=function(){var o={};o.group_name="predefined",o.multiple_allowed=!0,o.items=[],"RESERVED"!==e.reservationData.reservation_card.reservation_status&&(o.items.push(h.includeNotReady),o.items.push(h.includeDueOut)),o.items.push(h.includePreassigned),e.checkInInspectedOnly&&o.items.push(h.includeClean),e.roomFeatures.splice(0,0,o)},e.getRoomIdsInSelectedFloor=function(){var o=[];return e.floors.forEach(function(r){r.id===parseInt(e.floorFilterData.selectedFloorId)&&(o=r.room_ids)}),o},e.setSelectedFiltersList=function(){e.selectedFiltersList=[],e.selectedPredefinedFiltersList=[];for(var o=e.roomFeatures.length&&e.roomFeatures[0].items.length,r=e.roomFeatures,t=0;t<o;t++)e.roomFeatures[0].items[t].selected&&e.selectedPredefinedFiltersList.push(r[0].items[t].id);for(var a=1;a<r.length;a++)for(var t=0;t<r[a].items.length;t++)r[a].items[t].selected&&e.selectedFiltersList.push(r[a].items[t].id)},e.isRoomListEmpty=function(){return 0===e.filteredRooms.length},f.getRequestParams=function(o,r){var t={per_page:y,page_no:o,reservation_id:e.reservationData.reservation_card.reservation_id};return r?(t.query=e.searchText,t[h.includeNotReady.param]=!0,t[h.includeDueOut.param]=!0,t[h.includePreassigned.param]=!0,t[h.includeClean.param]=!0):(t.room_type_ids=[e.currentRoomTypeId],t.floor_id=e.selectedFloorId,_.each(e.selectedPredefinedFiltersList,function(e){switch(e){case h.includeNotReady.id:t[h.includeNotReady.param]=!0;break;case h.includeDueOut.id:t[h.includeDueOut.param]=!0;break;case h.includePreassigned.id:t[h.includePreassigned.param]=!0;break;case h.includeClean.id:t[h.includeClean.param]=!0}}),t.selected_room_features=[],_.each(e.selectedFiltersList,function(e){t.selected_room_features.push(e)})),t},f.onRoomsFetchSuccess=function(o){e.filteredRooms=o.rooms,e.reservation_occupancy=o.reservation_occupancy,e.totalCount=o.total_count,e.checkInInspectedOnly=o.checkin_inspected_only,f.refreshScroller(),e.myScroll.hasOwnProperty(R)&&e.myScroll[R].scrollTo(0,0,100),f.refreshPagination()},f.onRoomFetchFailure=function(){e.filteredRooms=[]},f.doSearch=function(o){var r=f.getRequestParams(o,!0);e.callAPI(a.searchRooms,{params:r,onSuccess:f.onRoomsFetchSuccess,onFailure:f.onRoomFetchFailure})},f.getRoomsByRoomType=function(o){var r=f.getRequestParams(o,!1);e.callAPI(a.getRoomsByRoomType,{params:r,onSuccess:f.onRoomsFetchSuccess,onFailure:f.onRoomFetchFailure})},f.loadAPIData=function(o){e.isSearchActive?f.doSearch(o):f.getRoomsByRoomType(o)},f.initPagination=function(){e.paginationConfig={id:"roomsList",api:f.loadAPIData,perPage:y}},f.refreshPagination=function(){u(function(){e.$broadcast("updatePagination","roomsList")},50)},f.refreshScroller=function(){u(function(){e.refreshScroller(R)},50)},f.resetFilters=function(){_.each(e.roomFeatures,function(e){_.each(e.items,function(e){e.selected=!1})}),e.selectedPredefinedFiltersList=[],e.selectedFiltersList=[]},e.init=function(){e.roomTypes=c.room_types,e.reservationData.allotment&&e.reservationData.allotment.id&&(e.roomTypes=_.filter(e.roomTypes,function(e){return!e.is_suite})),e.roomFeatures=c.room_features,e.filteredRooms=i.rooms,e.floors=c.floors.floor_details,e.reservationData=e.$parent.reservation,e.checkInInspectedOnly=i.checkin_inspected_only,e.addPredefinedFilters(),e.setSelectedFiltersList(),e.reservation_occupancy=i.reservation_occupancy,e.clickedButton=t.clickedButton,e.assignedRoom="",C=e.roomType=t.room_type,e.isStandAlone=o.isStandAlone,e.isFiltersVisible=!1,e.$emit("HeaderChanged",s("translate")("ROOM_ASSIGNMENT_TITLE")),e.roomTransfer.oldRoomNumber=e.reservationData.reservation_card.room_number,e.roomTransfer.oldRoomType=e.reservationData.reservation_card.room_type_description,e.currentRoomTypeId=t.roomTypeId||"",f.initPagination(),e.totalCount=i.total_count,f.refreshScroller(),f.refreshPagination(),e.isSearchActive=!1,e.searchText="",e.currentRoomTypeCode=e.reservationData.reservation_card.room_type_code},e.init(),e.applyFloorFilter=function(o){e.floorFilterData=o,o.selectedFloorId?e.selectedFloorId=o.selectedFloorId:e.selectedFloorId=""},e.showUnAssignRoom=function(){var o=e.reservationData.reservation_card;return o.reservation_status.indexOf(["CHECKING_IN","RESERVED"])&&!!o.room_number&&!e.roomAssgnment.inProgress&&!o.is_hourly_reservation&&"CHECKEDIN"!==o.reservation_status},e.displayRoomAssignementError=function(o){m.open({template:"/assets/partials/roomAssignment/rvRoomAssignmentShowErrorMessage.html",className:"ngdialog-theme-default",scope:e,data:JSON.stringify({error:o})})},e.clickedCancelButton=function(){e.assignedRoom="",e.currentRoomObject="",e.getRooms(!0),e.closeDialog()},e.shouldShowPagination=function(){return e.totalCount>y},e.shouldShowChangeRoomTypeBtn=function(){return o.isStandAlone&&!o.isHourlyRateOn&&e.reservationData.reservation_card.room_type_code!==e.currentRoomTypeCode&&"CHECKEDIN"!==e.reservationData.reservation_card.reservation_status},e.changeRoomType=function(){if("true"===e.isRoomLockedForThisReservation)m.open({template:"/assets/partials/roomAssignment/rvRoomLocked.html",className:"ngdialog-theme-default",scope:e});else{var o=_.find(e.roomTypes,{type:e.roomType}).availability,r=e.getCurrentRoomType(),t=o>0,a=p.getPermissionValue("OVERBOOK_ROOM_TYPE");t?$():r.is_suite_room||!a?m.open({template:"/assets/partials/roomAssignment/rvRoomTypeNotAvailable.html",className:"ngdialog-theme-default",scope:e}):m.open({template:"/assets/partials/roomAssignment/rvOverBookRoom.html",controller:"RVOverBookRoomDialogController",className:"ngdialog-theme-default",scope:e})}};var $=function(){var r=!1,t=e.getCurrentRoomType();null!==t.max_occupancy&&null!==e.reservation_occupancy&&t.max_occupancy<e.reservation_occupancy&&(r=!0,e.max_occupancy=t.max_occupancy),r?m.open({template:"/assets/partials/roomAssignment/rvMaximumOccupancyDialog.html",controller:"rvMaximumOccupancyDialogController",className:"ngdialog-theme-default",scope:e}):o.isUpsellTurnedOn?e.openApplyChargeDialog():O()}}]),sntRover.controller("RVRoomFiltersController",["$scope","$state","$stateParams","RVRoomAssignmentSrv",function(e,o,r,t){BaseCtrl.call(this,e),e.roomFeatures=e.$parent.roomFeatures,e.floor_details=e.$parent.floors,e.data={},e.data.isNoFloorSelected=!0,e.$on("roomFeaturesLoaded",function(o,r){e.roomFeatures=r}),e.selectedFloorChanged=function(){e.data.isNoFloorSelected&&(e.data.selectedFloor="");var o={isNoFloorSelected:e.data.isNoFloorSelected,selectedFloorId:e.data.selectedFloor};e.$parent.applyFloorFilter(o),e.$emit("roomFeaturesUpdated",e.roomFeatures)},e.setSelectionForFeature=function(o,r){if(!e.roomFeatures[o].multiple_allowed)for(var t=0;t<e.roomFeatures[o].items.length;t++)r!==t&&(e.roomFeatures[o].items[t].selected=!1);e.roomFeatures[o].items[r].selected=!e.roomFeatures[o].items[r].selected,e.$emit("roomFeaturesUpdated",e.roomFeatures)},e.clearAllFilters=function(){for(var o=0;o<e.roomFeatures.length;o++)for(var r=0;r<e.roomFeatures[o].items.length;r++)e.roomFeatures[o].items[r].selected=!1;e.$emit("roomFeaturesUpdated",e.roomFeatures)}}]),sntRover.controller("rvRoomTransferConfirmationCtrl",["$scope","$rootScope","$filter","ngDialog","$timeout",function(e,o,r,t,a){BaseCtrl.call(this,e);var s=parseInt(e.roomTransfer.newRoomRate),n=parseInt(e.roomTransfer.oldRoomRate);e.isSmallerRate=function(){return s<n},e.isLargerRate=function(){return s>n},e.moveWithoutRateChange=function(){e.roomTransfer.withoutRateChange=!0,e.assignRoom(),e.closeDialog()},e.applyRateChange=function(){e.roomTransfer.withoutRateChange=!1,e.roomTransfer.newRoomRateChange=e.roomTransfer.newRoomRate,e.assignRoom(),e.closeDialog()},e.confirm=function(){e.roomTransfer.withoutRateChange=!0,e.assignRoom(),e.closeDialog()}}]),angular.module("sntRover").controller("RVUpgradesCtrl",["$scope","$state","$stateParams","RVUpgradesSrv","$sce","$filter","ngDialog","$timeout",function(e,o,r,t,a,s,n,i){BaseCtrl.call(this,e);var c=s("translate")("ROOM_UPGRADES_TITLE");e.setTitle(c);var l={tap:!0,click:!0};e.setScroller("upgradesView",l),e.eventTimestamp="",e.upgradesList=[],e.headerData={},e.upgradesDescriptionStatusArray=[],e.selectedUpgrade={},e.selectedUpgradeIndex="";var u=!1;e.reservationData=e.$parent.reservation,e.isUpsellAvailable=function(){var o=!1;return e.upgradesList.length>0&&!e.reservationData.reservation_card.is_suite&&"true"===e.reservationData.reservation_card.is_upsell_available&&("RESERVED"===e.reservationData.reservation_card.reservation_status||"CHECKING_IN"===e.reservationData.reservation_card.reservation_status)&&(o=!0),o};e.$on("roomUpgradesLoaded",function(o,r){e.upgradesList=[],_.each(r.upsell_mapping,function(o){var t=r.room_for_room_type[o.upgrade_room_type_id_int];t&&(o.upgrade_room_number=t.room_number,o.donot_move_room=t.donot_move_room,e.upgradesList.push(o)),e.isUpsellAvailable()}),e.setUpgradesDescriptionInitialStatuses(),setTimeout(e.refreshScroller.bind(null,"upgradesView"),1e3)}),e.imageLoaded=function(){e.refreshScroller("upgradesView")},e.showMaximumOccupancyDialog=function(o){if("true"===e.isRoomLockedForThisReservation||e.upgradesList[o].donot_move_room)n.open({template:"/assets/partials/roomAssignment/rvRoomLocked.html",className:"ngdialog-theme-default",scope:e});else{var r=!1;""!==e.upgradesList[o].room_max_occupancy&&null!==e.reservation_occupancy?parseInt(e.upgradesList[o].room_max_occupancy)<e.reservation_occupancy&&(r=!0,e.max_occupancy=parseInt(e.upgradesList[o].room_max_occupancy)):""!==e.upgradesList[o].room_type_max_occupancy&&null!==e.reservation_occupancy&&parseInt(e.upgradesList[o].room_type_max_occupancy)<e.reservation_occupancy&&(r=!0,e.max_occupancy=parseInt(e.upgradesList[o].room_type_max_occupancy)),e.selectedUpgradeIndex=o,r?n.open({template:"/assets/partials/roomAssignment/rvMaximumOccupancyDialog.html",controller:"rvMaximumOccupancyDialogController",className:"ngdialog-theme-default",scope:e}):e.selectUpgrade()}},e.occupancyDialogSuccess=function(){e.selectUpgrade()};var m=function(o){e.passingParams={errorMessage:o.errorMessage[0]},n.open({template:"/assets/partials/roomAssignment/rvGroupRoomTypeNotConfigured.html",controller:"rvBorrowRoomTypeCtrl",scope:e})},d=function(o){e.selectedUpgrade.is_upsell_available=o.is_upsell_available,e.$emit("upgradeSelected",e.selectedUpgrade)},p=function(o){if(o.hasOwnProperty("httpStatus"))switch(o.httpStatus){case 470:u=!0,m(o)}else e.$parent.errorMessage=o};e.borrowFromOtherRoomType=function(){e.closeDialog(),i(function(){e.selectUpgrade()},300)},e.selectUpgrade=function(){var o=e.selectedUpgradeIndex,a=e.upgradesList[o],s={};s.forcefully_assign_room=u,u=!1,s.reservation_id=parseInt(r.reservation_id,10),s.upsell_amount_id=parseInt(a.upsell_amount_id,10),s.room_no=a.upgrade_room_number,s.is_preassigned=a.is_preassigned,_.extend(e.selectedUpgrade,{room_id:a.room_id,room_no:a.upgrade_room_number,room_type_name:a.upgrade_room_type_name,room_type_code:a.upgrade_room_type,room_type_level:parseInt(a.room_type_level)});var n={params:s,successCallBack:d,failureCallBack:p,successCallBackParameters:{selectedListItem:a}};e.callAPI(t.selectUpgrade,n)},e.$on("UPGRADE_ROOM_SELECTED_FROM_ROOM_ASSIGNMENT",function(o,r){e.selectedUpgradeIndex=r,e.selectUpgrade()}),e.toggleUpgradeDescriptionStatus=function(o,r){if(o.stopPropagation(),o.stopImmediatePropagation(),parseInt(e.eventTimestamp)){if(o.timeStamp-e.eventTimestamp<500)return;e.upgradesDescriptionStatusArray[r]=!e.upgradesDescriptionStatusArray[r]}else e.upgradesDescriptionStatusArray[r]=!e.upgradesDescriptionStatusArray[r];e.eventTimestamp=o.timeStamp,e.refreshScroller("upgradesView")},e.isDescriptionVisible=function(o){return e.upgradesDescriptionStatusArray[o]},e.setUpgradesDescriptionInitialStatuses=function(){e.upgradesDescriptionStatusArray=new Array(e.upgradesList.length);for(var o=0;o<e.upgradesDescriptionStatusArray.length;o++)e.upgradesDescriptionStatusArray[o]=!1,e.upgradesList[o].upgrade_room_description=a.trustAsHtml(e.upgradesList[o].upgrade_room_description)},e.getRoomStatusClass=function(e){var o="ready";return"true"===e.is_oos?"room-grey":o}}]),angular.module("sntRover").controller("RVUpgradesController",["$scope","$rootScope","$state","$stateParams","RVUpgradesSrv","RVReservationCardSrv","$sce","$filter","ngDialog","$timeout",function(e,o,r,t,a,s,n,i,c,l){BaseCtrl.call(this,e),o.setPrevState={title:i("translate")("STAY_CARD"),scope:e,callback:"backToStayCard"},e.heading="Room Upgrades",e.setHeadingTitle(e.heading),e.isRoomLockedForThisReservation=t.cannot_move_room,e.buttonText={noThanks:"NO THANKS, proceed with Check In"},e.initAdvQueCheck=function(){var r=o.advanced_queue_flow_enabled,t=e.$parent.reservation.check_in_via_queue;e.buttonText.noThanks="No Thanks, proceed with Check In",r&&t&&(e.buttonText.noThanks="No thanks, proceed to queue")},e.initAdvQueCheck(),typeof e.$parent==typeof{}&&(e.$parent.myScrollOptions={upgradesView:{scrollX:!0,scrollY:!1,scrollbars:!0,snap:!1,hideScrollbar:!1,preventDefault:!1}}),e.reservationData=e.$parent.reservation,e.upgradesList=[],e.upgradesDescriptionStatusArray=[],e.clickedButton=t.clickedButton,e.selectedUpgradeIndex="";var u=!1;e.isUpsellAvailable=function(){var o=!1;return e.upgradesList.length>0&&!e.reservationData.reservation_card.is_suite&&"true"===e.reservationData.reservation_card.is_upsell_available&&("RESERVED"===e.reservationData.reservation_card.reservation_status||"CHECKING_IN"===e.reservationData.reservation_card.reservation_status)&&(o=!0),o};e.getAllUpgrades=function(){var o=function(o){_.each(o.upsell_mapping,function(r){var t=o.room_for_room_type[r.upgrade_room_type_id_int];t&&(r.upgrade_room_number=t.room_number,r.donot_move_room=t.donot_move_room,e.upgradesList.push(r)),e.isUpsellAvailable()}),e.reservation_occupancy=e.reservation_occupancy,e.setUpgradesDescriptionInitialStatuses(),e.$emit("hideLoader"),setTimeout(function(){typeof e.$parent==typeof{}&&typeof e.$parent.myScroll==typeof{}&&e.$parent.myScroll.upgradesView.refresh()},3e3)},r=function(o){e.$emit("hideLoader"),e.$parent.errorMessage=o},s={};s.reservation_id=t.reservation_id,e.invokeApi(a.getAllUpgrades,s,o,r)};var m=e.reservationData.reservation_card.reservation_status,d="true"===e.reservationData.reservation_card.is_upsell_available&&("RESERVED"===m||"CHECKING_IN"===m);d?e.getAllUpgrades():"",e.showMaximumOccupancyDialog=function(o){if("true"===e.isRoomLockedForThisReservation||e.upgradesList[o].donot_move_room)c.open({template:"/assets/partials/roomAssignment/rvRoomLocked.html",className:"ngdialog-theme-default",scope:e});else{var r=!1;""!==e.upgradesList[o].room_max_occupancy&&null!==e.reservation_occupancy?parseInt(e.upgradesList[o].room_max_occupancy)<e.reservation_occupancy&&(r=!0,e.max_occupancy=parseInt(e.upgradesList[o].room_max_occupancy)):""!==e.upgradesList[o].room_type_max_occupancy&&null!==e.reservation_occupancy&&parseInt(e.upgradesList[o].room_type_max_occupancy)<e.reservation_occupancy&&(r=!0,e.max_occupancy=parseInt(e.upgradesList[o].room_type_max_occupancy)),
e.selectedUpgradeIndex=o,r?c.open({template:"/assets/partials/roomAssignment/rvMaximumOccupancyDialog.html",controller:"rvMaximumOccupancyDialogController",className:"ngdialog-theme-default",scope:e}):e.selectUpgrade()}},e.occupancyDialogSuccess=function(){e.selectUpgrade()};var p=function(o){e.passingParams={errorMessage:o.errorMessage[0]},c.open({template:"/assets/partials/roomAssignment/rvGroupRoomTypeNotConfigured.html",controller:"rvBorrowRoomTypeCtrl",scope:e})},g=function(o,t){var a=t.selectedListItem,n=e.reservationData.reservation_card;_.extend(e.reservationData.reservation_card,{room_number:a.upgrade_room_number,room_type_description:a.upgrade_room_type_name,room_type_code:a.upgrade_room_type,room_status:"READY",fo_status:"VACANT",room_ready_status:"INSPECTED",is_upsell_available:o.is_upsell_available?"true":"false"}),s.updateResrvationForConfirmationNumber(n.confirmation_num,e.reservationData),"checkinButton"===e.clickedButton?r.go("rover.reservation.staycard.billcard",{reservationId:n.reservation_id,clickedButton:"checkinButton"}):e.backToStayCard(!0)},v=function(o){if(o.hasOwnProperty("httpStatus"))switch(o.httpStatus){case 470:u=!0,p(o)}else e.errorMessage=o};e.borrowFromOtherRoomType=function(){e.closeDialog(),l(function(){e.selectUpgrade()},300)},e.selectUpgrade=function(){var o=e.selectedUpgradeIndex,r=e.upgradesList[o],s={};s.forcefully_assign_room=u,u=!1,s.reservation_id=parseInt(t.reservation_id,10),s.upsell_amount_id=parseInt(r.upsell_amount_id,10),s.room_no=r.upgrade_room_number,s.is_preassigned=r.is_preassigned;var n={params:s,successCallBack:g,failureCallBack:v,successCallBackParameters:{selectedListItem:r}};e.callAPI(a.selectUpgrade,n)},e.toggleUpgradeDescriptionStatus=function(o){e.upgradesDescriptionStatusArray[o]=!e.upgradesDescriptionStatusArray[o]},e.isDescriptionVisible=function(o){return e.upgradesDescriptionStatusArray[o]},e.setUpgradesDescriptionInitialStatuses=function(){e.upgradesDescriptionStatusArray=new Array(e.upgradesList.length);for(var o=0;o<e.upgradesDescriptionStatusArray.length;o++)e.upgradesDescriptionStatusArray[o]=!1,e.upgradesList[o].upgrade_room_description=n.trustAsHtml(e.upgradesList[o].upgrade_room_description)},e.backToStayCard=function(o){var t={id:e.reservationData.reservation_card.reservation_id,confirmationId:e.reservationData.reservation_card.confirmation_num};o&&(t.isrefresh=o),r.go("rover.reservation.staycard.reservationcard.reservationdetails",t)},e.getTopbarRoomStatusClass=function(){var o=e.reservationData.reservation_card.reservation_status,r=e.reservationData.reservation_card.room_ready_status,t=e.reservationData.reservation_card.fo_status,a=e.reservationData.reservation_card.checkin_inspected_only;return getMappedRoomStatusColor(o,r,t,a)},e.setNightsText=function(){return 1===e.reservationData.reservation_card.total_nights?i("translate")("NIGHT_LABEL"):i("translate")("NIGHTS_LABEL")},e.getHorizontalScrollWidth=function(){return 465*e.upgradesList.length},e.putGuestInQueue=!1,o.reservationUpgradeWatch||(o.reservationUpgradeWatch=1,o.$on("putGuestInQueue",function(){o.advanced_queue_flow_enabled?e.putGuestInQueue=!0:e.putGuestInQueue=!1})),e.goToCheckinScreen=function(o){r.go("rover.reservation.staycard.billcard",{reservationId:e.reservationData.reservation_card.reservation_id,clickedButton:"checkinButton"})},e.getRoomStatusClass=function(e){var o="ready";return"true"===e.is_oos?"room-grey":o}}]),angular.module("sntRover").service("RVRoomAssignmentSrv",["$q","RVBaseWebSrv","rvBaseWebSrvV2",function(e,o,r){var t=this;this.cachedRoomsResponse={},this.getRooms=function(r){var t=e.defer(),a="/staff/rooms/get_rooms";return o.postJSON(a,r).then(function(e){t.resolve(e)},function(e){t.reject(e)}),t.promise},this.getPreferences=function(r){var t=e.defer(),a="/staff/preferences/room_assignment.json";return o.getJSON(a,r).then(function(e){t.resolve(e)},function(e){t.reject(e)}),t.promise},this.assignRoom=function(r){var t=e.defer(),a="/staff/reservation/modify_reservation";return o.postJSON(a,r).then(function(e){t.resolve(e)},function(e){t.reject(e)}),t.promise},this.UnAssignRoom=function(o){var t=e.defer(),a=o.reservationId,s="api/reservations/"+a+"/unassign_room";return r.postJSON(s).then(function(e){t.resolve(e)},function(e){t.reject(e)}),t.promise},this.moveInHouseRooms=function(o){var t=e.defer(),a="/staff/reservation/room_inhouse_move";return r.getJSON(a,o).then(function(e){t.resolve(e)},function(e){t.reject(e)}),t.promise},this.getPaginatedResult=function(e,o,r){var t=(o-1)*r,a=t+r,s=JSON.parse(JSON.stringify(e));return s.rooms=_.isEmpty(s.rooms)?s.rooms:s.rooms.slice(t,a),s},this.searchRooms=function(r){var a=e.defer(),s="api/rooms/search";return 1===r.page_no?o.postJSON(s,r).then(function(e){t.cachedRoomsResponse=JSON.parse(JSON.stringify(e)),a.resolve(t.getPaginatedResult(e,r.page_no,r.per_page))},function(e){t.cachedRoomsResponse={},a.reject(e)}):a.resolve(t.getPaginatedResult(t.cachedRoomsResponse,r.page_no,r.per_page)),a.promise},this.getRoomsByRoomType=function(r){var a=e.defer(),s="/api/rooms/retrieve_available_rooms";return 1===r.page_no?o.postJSON(s,r).then(function(e){t.cachedRoomsResponse=JSON.parse(JSON.stringify(e)),a.resolve(t.getPaginatedResult(e,r.page_no,r.per_page))},function(e){t.cachedRoomsResponse={},a.reject(e)}):a.resolve(t.getPaginatedResult(t.cachedRoomsResponse,r.page_no,r.per_page)),a.promise}}]),angular.module("sntRover").service("RVUpgradesSrv",["$q","RVBaseWebSrv",function(e,o){this.getAllUpgrades=function(r){var t=e.defer(),a="/staff/reservations/upgrade_room_type_upsell_options.json";return o.getJSON(a,r).then(function(e){t.resolve(e)},function(e){t.reject(e)}),t.promise},this.selectUpgrade=function(r){var t=e.defer(),a="/staff/reservations/upgrade_room.json";return o.postJSON(a,r).then(function(e){t.resolve(e)},function(e){t.reject(e)}),t.promise}}]),angular.module("sntRover").service("RVNightlyDiaryRightFilterBarSrv",["$q","sntBaseWebSrv",function(e,o){var r=this;r.fetchRoomType=function(r){var t=e.defer(),a="/api/room_types.json?exclude_pseudo=true&exclude_suite=true";return o.getJSON(a,r).then(function(e){t.resolve(e)},function(e){t.reject(e)}),t.promise},r.fetchFloorList=function(r){var t=e.defer(),a="/api/floors.json";return o.getJSON(a,r).then(function(e){t.resolve(e)},function(e){t.reject(e)}),t.promise},r.getPreferences=function(){var r=e.defer(),t="/staff/preferences/room_assignment.json";return o.getJSON(t).then(function(e){r.resolve(e)},function(e){r.reject(e)}),r.promise},r.fetchFilterList=function(o){var t=e.defer(),a=[],s={};return a.push(r.fetchFloorList(o).then(function(e){s.floors=e.floors})),a.push(r.fetchRoomType(o).then(function(e){s.rooms=e.results})),a.push(r.getPreferences().then(function(e){s.roomFeatures=e.data.room_features})),e.all(a).then(function(){t.resolve(s)}),t.promise}}]),angular.module("sntRover").service("RVNightlyDiaryRoomNumberSearchSrv",["$q","BaseWebSrvV2",function(e,o){this.fetchRoomSearchResults=function(r){var t=e.defer(),a="/api/nightly_diary/search_room";return o.getJSON(a,r).then(function(e){t.resolve(e)},function(e){t.reject(e)}),t.promise}}]),angular.module("sntRover").service("RVNightlyDiarySearchSrv",["$q","BaseWebSrvV2",function(e,o){var r=this;r.searchPerPage=50,r.page=1,r.fetchSearchResults=function(t){var a=e.defer(),s="search.json?per_page="+r.searchPerPage+"&page="+r.page+"&is_from_nightly_diary=true";return t.fakeDataToAvoidCache=new Date,o.getJSON(s,t).then(function(e){a.resolve(e.data)},function(e){a.reject(e)}),a.promise}}]),angular.module("sntRover").service("RVNightlyDiarySrv",["$q","sntBaseWebSrv","$rootScope",function(e,o,r){var t=this;this.updateCache=function(e){t.searchParamsCached=e},this.getCache=function(){return t.searchParamsCached},this.fetchRoomsList=function(r){var t=e.defer(),a="/api/nightly_diary/room_list";return o.postJSON(a,r).then(function(e){t.resolve(e)},function(e){t.reject(e)}),t.promise},this.fetchDatesList=function(r){var t=e.defer(),a=[],s="/api/nightly_diary/date_list",n={},i={};return n.start_date=r.start_date,n.no_of_days=r.no_of_days,o.getJSON(s,n).then(function(e){angular.forEach(e.dates,function(e){var o=tzIndependentDate(e),r=0===o.getDay()||6===o.getDay(),t={date:e,isWeekend:r};a.push(t)}),i={dates:a,hotelCheckinTime:e.hotel_checkin_time,hotelCheckoutTime:e.hotel_checkout_time},t.resolve(i)},function(e){t.reject(e)}),t.promise},this.fetchReservationsList=function(r){t.updateCache(r);var a=e.defer(),s="/api/nightly_diary/reservation_list",n={};return n.start_date=r.start_date,n.no_of_days=r.no_of_days,n.page=r.page,n.per_page=r.per_page,n.selected_room_type_ids=r.selected_room_type_ids,n.selected_floor_ids=r.selected_floor_ids,n.selected_room_feature_ids=r.selected_room_feature_ids,o.postJSON(s,n).then(function(e){a.resolve(e)},function(e){a.reject(e)}),a.promise},this.checkUpdateAvaibale=function(r){var t="/staff/change_stay_dates/"+r.reservation_id+"/update.json",a={arrival_date:r.arrival_date,dep_date:r.dep_date},s=e.defer();return o.getJSON(t,a).then(function(e){s.resolve(e)},function(e){s.reject(e)}),s.promise},this.validateStayChanges=function(r){var t="/api/nightly_diary/validate_stay_change",a=e.defer();return o.getJSON(t,r).then(function(e){a.resolve(e.result)},function(e){a.reject(e)}),a.promise},this.confirmUpdates=function(r){var t="/staff/change_stay_dates/"+r.reservation_id+"/confirm",a={arrival_date:r.arrival_date,dep_date:r.dep_date,room_number:r.room_number,authorize_credit_card:r.authorize_credit_card,is_from_diary:!0},s=e.defer();return o.postJSON(t,a).then(function(e){s.resolve(e)},function(e){s.reject(e)}),s.promise},this.fetchRoomsListAndReservationList=function(o){var r=e.defer(),a={roomList:null,reservationList:null,dateList:null};return e.when().then(function(){return t.fetchRoomsList(o).then(function(e){a.roomList=e})}).then(function(){return o.page=a.roomList.page_number,t.fetchReservationsList(o).then(function(e){a.reservationList=e})}).then(function(){return t.fetchDatesList(o).then(function(e){a.dateList=e})}).then(function(){r.resolve(a)},function(e){r.reject(e)}),r.promise},this.fetchUnassignedReservationList=function(t){var a=e.defer(),s="/api/nightly_diary/unassigned_reservations",n=r.businessDate;return o.getJSON(s,t).then(function(e){angular.forEach(e.reservations,function(e){e.statusClass=e.arrival_date===n?"check-in":"no-status",e.fullName=e.last_name+" "+e.first_name}),a.resolve(e)},function(e){a.reject(e)}),a.promise},this.retrieveAvailableRooms=function(r){var t=e.defer(),a="/api/nightly_diary/retrieve_available_rooms";return o.postJSON(a,r).then(function(e){t.resolve(e.data)},function(e){t.reject(e)}),t.promise},this.retrieveAvailableFreeSlots=function(r){var t=e.defer(),a="/api/nightly_diary/availability";return o.postJSON(a,r).then(function(e){t.resolve(e)},function(e){t.reject(e)}),t.promise},this.assignRoom=function(r){var t=e.defer(),a="/staff/reservation/modify_reservation";return o.postJSON(a,r).then(function(e){t.resolve(e.data)},function(e){t.reject(e)}),t.promise},this.fetchAvailableTimeSlots=function(r){var t=e.defer(),a="/api/nightly_diary/available_time_slots";return o.postJSON(a,r).then(function(e){t.resolve(e)},function(e){t.reject(e)}),t.promise},this.unAssignRoom=function(r){var t=e.defer(),a="/api/reservations/"+r.id+"/unassign_room";return o.postJSON(a,r).then(function(e){t.resolve(e)},function(e){t.reject(e)}),t.promise},this.getPreferences=function(r){var t=e.defer(),a="/staff/preferences/room_assignment.json";return o.getJSON(a,r).then(function(e){t.resolve(e)},function(e){t.reject(e)}),t.promise},this.updateBillingInformation=function(r){var t=e.defer(),a="api/bill_routings/update_dates";return o.postJSON(a,r).then(function(e){t.resolve(e)},function(e){t.reject(e)}),t.promise},this.initiateAutoAssignRooms=function(e){var r="api/auto_room_assign_processes/auto_room_assignment";return o.postJSON(r,e)},this.fetchAutoAssignStatus=function(){var e="api/auto_room_assign_processes/status";return o.getJSON(e)},this.unlockRoomDiary=function(){var e="api/auto_room_assign_processes/unlock_diary";return o.postJSON(e)}}]);